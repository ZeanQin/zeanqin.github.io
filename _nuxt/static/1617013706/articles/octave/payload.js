__NUXT_JSONP__("/articles/octave", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq){return {data:[{article:{title:"Basics of Octave",excerpt:"The high level programming language for prototyping machine learning algorithms.",category:"Machine Learning",tags:["Octave"],createdAt:"2019-11-09T13:00:00.000Z",updatedAt:"2020-08-16T05:48:44.306Z",enableComments:E,enableTOC:E,toc:[{id:F,depth:t,text:G},{id:H,depth:t,text:I},{id:J,depth:t,text:K},{id:L,depth:y,text:M},{id:N,depth:y,text:O},{id:P,depth:y,text:B},{id:Q,depth:y,text:R},{id:S,depth:y,text:T},{id:U,depth:t,text:V},{id:W,depth:t,text:X},{id:Y,depth:t,text:Z},{id:_,depth:t,text:$},{id:aa,depth:t,text:ab}],body:{type:"root",children:[{type:b,tag:u,props:{id:F},children:[{type:b,tag:g,props:{href:"#what-is-octave",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:G}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"A high level programming language for quickly prototyping and developing machine learning algorithms. Once the algorithms have been developed, they can be properly implemented in other programming languages such as C++, Java etc."}]},{type:a,value:c},{type:b,tag:u,props:{id:H},children:[{type:b,tag:g,props:{href:"#installation",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:I}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"On Ubuntu, run"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"sudo apt-get update && sudo apt-get install octave"}]}]},{type:a,value:c},{type:b,tag:u,props:{id:J},children:[{type:b,tag:g,props:{href:"#common-commands",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:K}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Documentation can be found here "},{type:b,tag:g,props:{href:ac,rel:[ad,ae,af],target:ag},children:[{type:a,value:ac}]},{type:a,value:". Some common commands are,"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:ah}]},{type:a,value:" starts the interpreter"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"help \u003Cfunctionname\u003E"}]},{type:a,value:" displays documentation for a built in function. For example, "},{type:b,tag:d,props:{},children:[{type:a,value:ai}]},{type:a,value:" will bring up help information for plotting."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:z,props:{id:L},children:[{type:b,tag:g,props:{href:"#basic-operators",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:M}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"+"}]},{type:a,value:s},{type:b,tag:d,props:{},children:[{type:a,value:"-"}]},{type:a,value:s},{type:b,tag:d,props:{},children:[{type:a,value:"*"}]},{type:a,value:s},{type:b,tag:d,props:{},children:[{type:a,value:"\u002F"}]},{type:a,value:s},{type:b,tag:d,props:{},children:[{type:a,value:"^"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"=="}]},{type:a,value:"  - equality operator"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"~="}]},{type:a,value:" - inequality operator"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"&&"}]},{type:a,value:" - the AND logical operator"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"||"}]},{type:a,value:" - the OR logical operator"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"xor(\u003Cnumber\u003E, \u003Cnumber\u003E)"}]},{type:a,value:" - the XOR operator"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:aj}]},{type:a,value:" - chain two commands and carry them out together. Mostly for putting multiple commands on the same line."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:z,props:{id:N},children:[{type:b,tag:g,props:{href:"#other-keywords",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:O}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"%"}]},{type:a,value:" - comment"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:";"}]},{type:a,value:" - supress the print output"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"0"}]},{type:a,value:" means false and all other numbers mean true"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:z,props:{id:P},children:[{type:b,tag:g,props:{href:"#functions",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:B}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"PS1('\u003E\u003E ');"}]},{type:a,value:" - change the octave prompt"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"disp()"}]},{type:a,value:" - print the value of a variable, or a string"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"sprintf('something %0.2f', pi)"}]},{type:a,value:" - print optional arguments under the control of the template string template and returns a string"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"format"}]},{type:a,value:w},{type:b,tag:d,props:{},children:[{type:a,value:"format options"}]},{type:a,value:" such as "},{type:b,tag:d,props:{},children:[{type:a,value:"format long"}]},{type:a,value:s},{type:b,tag:d,props:{},children:[{type:a,value:"format short"}]},{type:a,value:" etc. changes the number of characters to be displayed"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"sqrt()"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"hist()"}]},{type:a,value:" plot a histogram"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"size(A)"}]},{type:a,value:w},{type:b,tag:d,props:{},children:[{type:a,value:"size(A, DIM)"}]},{type:a,value:" return a row vector with the size (number of elements) of each dimension for the object A. When given a second argument, DIM, return the size of the corresponding dimension."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"length()"}]},{type:a,value:" Return the length of the object A. The length is 0 for empty objects, 1 for scalars, and the number of elements for vectors.  For matrix or N-dimensional objects, the length is the number of elements along the largest dimension (equivalent to 'max (size (A))')."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"max(X)"}]},{type:a,value:" - Find maximum values in the array X. For a vector argument, return the maximum value.  For a matrix argument, return a row vector with the maximum value of each column.  For a multi-dimensional array, 'max' operates along the first non-singleton dimension."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:C,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"magic(N)"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  Create an N-by-N magic square."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  A magic square is an arrangement of the integers '1:n^2' such that\nthe row sums, column sums, and diagonal sums are all equal to the\nsame value."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  Note: N must be a scalar greater than or equal to 3.  If you supply\nN less than 3, magic returns either a nonmagic square, or else the\ndegenerate magic squares 1 and []."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:C,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"find(N)"}]}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:C,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"flipud(X)"}]}]},{type:a,value:" - Flip the matrix upside down."}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Implementation of bash commands"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"pwd"}]},{type:a,value:" shows the current working directory"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"cd"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"ls"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"quit"}]},{type:a,value:w},{type:b,tag:d,props:{},children:[{type:a,value:"exit"}]},{type:a,value:" exit Octave"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:z,props:{id:Q},children:[{type:b,tag:g,props:{href:"#common-tasks",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:R}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"a = 1"}]},{type:a,value:s},{type:b,tag:d,props:{},children:[{type:a,value:"a = pi"}]},{type:a,value:" - define variable a and assign it a number"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"a = 'hi'"}]},{type:a,value:" - string assignment"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:z,props:{id:S},children:[{type:b,tag:g,props:{href:"#matrix",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:T}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Define a matrix"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"A = [1, 2; 3 4; 5 6;]"}]},{type:a,value:" defines a 3 x 2 matrix"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"A = [1 2 3;]"}]},{type:a,value:" defines a 1 x 3 matrix"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"A = ones(2, 3)"}]},{type:a,value:" generates a 2 x 3 matrix of all ones"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"A = zeros(2, 3)"}]},{type:a,value:" generates a 2 x 3 matrix of all zeros"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"A = rand(2, 3)"}]},{type:a,value:" generates a 2 x 3 matrix of random numbers drawn uniformly between 0 and 1"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"A = randn(2, 3)"}]},{type:a,value:" generates a 2 x 3 matrix of random numbers drawn from gaussian distribution with mean zero and variance one"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"eye(4)"}]},{type:a,value:" - generates a 4 x 4 identity matrix"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Define a vector"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"v = [1; 2; 3;]"}]},{type:a,value:" defines a vector"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"v = 1:0.1:2"}]},{type:a,value:" defines a row vector (also 1 x 11 matrix), with each number increasing by 0.1"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"v = 1:6"}]},{type:a,value:" defines a row vector (also 1 x 6 matrix)"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:u,props:{id:U},children:[{type:b,tag:g,props:{href:"#move-data-around",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:V}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Load data from file and save data to disk,"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"load file"}]},{type:a,value:w},{type:b,tag:d,props:{},children:[{type:a,value:"load('\u003Cfilename\u003E.ext')"}]},{type:a,value:" loads a file"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"who"}]},{type:a,value:" shows the variables in memory"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"whos"}]},{type:a,value:" shows the variables in memory with more details"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"clear"}]},{type:a,value:w},{type:b,tag:d,props:{},children:[{type:a,value:"clear \u003Cvariable_name\u003E"}]},{type:a,value:" to remove all variables or a particular variable from the memory"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"\u003Cvector_name\u003E(1:10)"}]},{type:a,value:" takes the first 10 rows of the vector"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"save \u003Cfilename\u003E.mat \u003Cvariable_name\u003E"}]},{type:a,value:" save values in variable to file on disk"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"save \u003Cfilename\u003E.txt \u003Cvariable_name\u003E -asci"}]},{type:a,value:" save values in variable to file on disk that is human readable"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Data indexing,"}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"\u003Cmatrix_variable\u003E(1, 2)"}]},{type:a,value:" get the value at row 1 and column 2"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"\u003Cmatrix_variable\u003E(2, :)"}]},{type:a,value:" get the all values in the second row"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"\u003Cmatrix_variable\u003E(:, 2)"}]},{type:a,value:" get the all values in the second column"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"\u003Cmatrix_variable\u003E([1, 3], :)"}]},{type:a,value:" from row 1 and row 3, get all columns"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"\u003Cmatrix_variable\u003E(:, 2) = [1; 2; 3;]"}]},{type:a,value:" replace the second column with the new vector"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"A = [A, [100; 101; 102]]"}]},{type:a,value:" append a vector to the right of matrix A"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:ak}]},{type:a,value:" put all elements of A into a single column vector"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"C = [A B]"}]},{type:a,value:w},{type:b,tag:d,props:{},children:[{type:a,value:"C = [A, B]"}]},{type:a,value:" concatinating A and B by putting B on the right side of A"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"C = [A : B]"}]},{type:a,value:" concatinating A and B by putting B at the bottom of A"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:ak}]},{type:a,value:" - Turn matrix into a vector."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:u,props:{id:W},children:[{type:b,tag:g,props:{href:"#compute-on-data",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:X}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"A * B"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"A .* B"}]},{type:a,value:" - element-wise multiplication; multiple each element in A by the corresponding element in B"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"A .^ 2"}]},{type:a,value:" - element-wise squaring of A; take the sqaure of each element in A"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"1 .\u002F A"}]},{type:a,value:" - element-wise inverse of A; calculate the inverse of each element in A"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"-X"}]},{type:a,value:w},{type:b,tag:d,props:{},children:[{type:a,value:"-1 * X"}]},{type:a,value:" - element-wise negative of X"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"X'"}]},{type:a,value:" - Transpose X."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"[val, ind] = max(a)"}]},{type:a,value:" - Get the max value and its index from the vector a."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"a \u003C 3"}]},{type:a,value:" - Do element-wise comparison"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"find(a \u003C 3)"}]},{type:a,value:" - Get the index of the elements in vector a that are smaller than 3"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"max(rand(3), rand(3))"}]},{type:a,value:" - Take the element-wise of two random 3 x 3 matrices."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"max(A, [], 1)"}]},{type:a,value:" - Take the max value of each column in matrix A."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"max(max(A))"}]},{type:a,value:" - Find the single biggest value in matrix A."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"sum(A, 1)"}]},{type:a,value:s},{type:b,tag:d,props:{},children:[{type:a,value:"sum(A, 2)"}]},{type:a,value:s},{type:b,tag:d,props:{},children:[{type:a,value:"sum(sum(magic(9) .* eye(9)))"}]},{type:a,value:" - Find the sum of each column, row or diagonal of matrix."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"The period (i.e. "},{type:b,tag:d,props:{},children:[{type:a,value:al}]},{type:a,value:") is usually used to denote element wise operations in Octave."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"log(X)"}]},{type:a,value:" - compute the natural logarithm, "},{type:b,tag:d,props:{},children:[{type:a,value:"ln(x)"}]},{type:a,value:", for each element of X"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"exp(X)"}]},{type:a,value:" - compute "},{type:b,tag:d,props:{},children:[{type:a,value:"e^x"}]},{type:a,value:" for each element of X"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"abs(X)"}]},{type:a,value:" - compute the absolute value of each element in X"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"find(X)"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"sum(y)"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  Sum of elements along dimension DIM."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  If DIM is omitted, it defaults to the first non-singleton\ndimension."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"prod(y)"}]},{type:a,value:" - Return the product of all elements in y."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"floor(y)"}]},{type:a,value:" - Round down the elements of y."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"ceil(y)"}]},{type:a,value:" - Round up the elements of y."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"pinv(X)"}]},{type:a,value:" - Get the inverse of the matrix X."}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:u,props:{id:Y},children:[{type:b,tag:g,props:{href:"#plotting",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:Z}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"check "},{type:b,tag:d,props:{},children:[{type:a,value:ai}]},{type:a,value:" for more details"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"plot(x, y, 'r')"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"hold on;"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  Retain plot data and settings so that subsequent plot commands\nare displayed on a single graph.  Line color and line style\nare advanced for each new plot added."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"xlabel('time')"}]},{type:a,value:s},{type:b,tag:d,props:{},children:[{type:a,value:"ylabel('value')"}]},{type:a,value:" - Set the labels along x and y axises"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"legend('sin', 'cos')"}]},{type:a,value:" - Add legends"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"title('my plot')"}]},{type:a,value:" - Add title to figure"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"print -dpng 'myPlot.png'"}]},{type:a,value:" - Save the plot."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"close"}]},{type:a,value:" - Close the current figure."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"axis([0.5 1 -1 1])"}]},{type:a,value:" - Zoom the x axis to be from 0.5 to 1 and set the y axis to be from -1 to 1"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"clf"}]},{type:a,value:" - clear a figure"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Two figures"}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"figure(1);\nplot(x, y1);\nfigure(2);\nplot(x, y2);\n"}]}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"subplot()"}]}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"% divide plot into a 1 x 2 grid, access first element\nsubplot(1, 2, 1);\nplot(x, y1);\n\n% access second element\nsubplot(1, 2, 2);\nplot(x, y2);\n"}]}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"imagesc(A)"}]}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"A = magic(5);\n\n% for visualising a matrix\n% running 3 commands at a time: plot matrix, add color bar and color map.\n% use comma to chain function calls\nimagesc(A), colorbar, colormap gray;\n"}]}]}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:u,props:{id:_},children:[{type:b,tag:g,props:{href:"#control-statements",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:$}]},{type:a,value:c},{type:b,tag:h,props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"for"}]},{type:a,value:am}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"indicies = 1:10;\nfor i = indicies,\n    disp(i);\nend;\n"}]}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"while"}]},{type:a,value:am}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"v = rand(10, 1);\ni = 1;\nwhile i \u003C= 5,\n    v(i) = 100;\n    i = i + 1;\nend;\n"}]}]}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"v = rand(10, 1)\n\ni = 1;\nwhile true,\n    v(i) = 999;\n    i = i + 1;\n    if i == 6,\n        break;\n    end;\n\nend;\n"}]}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:d,props:{},children:[{type:a,value:"if ... else ..."}]}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"i = 2;\n\nif i == 1,\n    disp('The value is 1.');\nelseif i == 2,\n    disp('The value is 2.');\nelse\n    disp('The value is not one or two');\nend;\n"}]}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:B}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"% create a file with the function name as the file name such as `squarethisnumber.m`, then inside it,\n\nfunction y = squarethisnumber(x)\n\ny = x^2;\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  then the function can be invoked as following in the same directory,"}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"squarethisnumber(5);\n"}]}]}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"use "},{type:b,tag:d,props:{},children:[{type:a,value:"addpath(\u003Cpath\u003E);"}]},{type:a,value:" to tell Octave where to look for function files."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  A function can return multiple parameters, for example inside the file "},{type:b,tag:d,props:{},children:[{type:a,value:"squareAndCubeThisNumber.m"}]},{type:a,value:aj}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"function [y1, y2] = squareAndCubeThisNumber(x)\n\ny1 = x^2;\ny2 = x^3;\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  then it can be invoked as,"}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"[a, b] = squareAndCubeThisNumber(5);\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  As a complete example, assume we have the training set as below,"}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:"table",props:{},children:[{type:b,tag:"thead",props:{},children:[{type:b,tag:A,props:{},children:[{type:b,tag:an,props:{align:v},children:[{type:a,value:"x"}]},{type:b,tag:an,props:{align:v},children:[{type:a,value:"y"}]}]}]},{type:b,tag:"tbody",props:{},children:[{type:b,tag:A,props:{},children:[{type:b,tag:x,props:{align:v},children:[{type:a,value:ao}]},{type:b,tag:x,props:{align:v},children:[{type:a,value:ao}]}]},{type:b,tag:A,props:{},children:[{type:b,tag:x,props:{align:v},children:[{type:a,value:ap}]},{type:b,tag:x,props:{align:v},children:[{type:a,value:ap}]}]},{type:b,tag:A,props:{},children:[{type:b,tag:x,props:{align:v},children:[{type:a,value:aq}]},{type:b,tag:x,props:{align:v},children:[{type:a,value:aq}]}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  and the form of the hypothesis is "},{type:b,tag:d,props:{},children:[{type:a,value:"h(x) = Θ0 + Θ1x"}]},{type:a,value:al}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  Then,"}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"% the design matrix\nX = [1 1; 1 2; 1 3;];\n\n% the labels\ny = [1; 2; 3;];\n\n% Θ\nΘ = [0; 1;];\n\n% then the cost i.e. overall error for all training examples is\nJ = costFunction(X, y, Θ);\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"  and "},{type:b,tag:d,props:{},children:[{type:a,value:"costFunction"}]},{type:a,value:" will be defined in "},{type:b,tag:d,props:{},children:[{type:a,value:"costFunction.m"}]},{type:a,value:" as,"}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"function J = costFunction(X, y, theta)\n\n% X is the \"design matrix\" containing our training examples\n% y is the class labels\n\nm = size(X, 1);                        % number of training examples\npredictions = X * theta;               % predictions of hypothesis on all m examples\nsquareErrors = (predictions - y) .^ 2; % squared errors\n\nJ = 1\u002F(2*m) * sum(squareErrors);\n"}]}]}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:u,props:{id:aa},children:[{type:b,tag:g,props:{href:"#references",ariaHidden:i,tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:ab}]},{type:a,value:c},{type:b,tag:"ol",props:{},children:[{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:g,props:{href:"http:\u002F\u002Fwiki.octave.org\u002FOctave_for_GNU\u002FLinux",rel:[ad,ae,af],target:ag},children:[{type:a,value:"Octave for GNU\u002FLinux"}]}]},{type:a,value:c}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Foctave",extension:".md",slug:ah}}],fetch:[],mutations:void 0}}("text","element","\n","code","li","p","a","ul","true",-1,"span","icon","icon-link","div","nuxt-content-highlight","pre","language-text","line-numbers",", ",2,"h2","left"," or ","td",3,"h3","tr","Functions","strong","blockquote",true,"what-is-octave","What is Octave","installation","Installation","common-commands","Common Commands","basic-operators","Basic operators","other-keywords","Other keywords","functions","common-tasks","Common tasks","matrix","Matrix","move-data-around","Move data around","compute-on-data","Compute on data","plotting","Plotting","control-statements","Control statements","references","References","https:\u002F\u002Foctave.org\u002Fdoc\u002Finterpreter\u002F","nofollow","noopener","noreferrer","_blank","octave","help plot",",","A(:)","."," loop","th","1","2","3")));