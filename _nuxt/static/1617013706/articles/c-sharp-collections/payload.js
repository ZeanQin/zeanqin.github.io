__NUXT_JSONP__("/articles/c-sharp-collections", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba){return {data:[{article:{title:"C# - Collections",excerpt:"Collections in C#.",category:"Programming Language",tags:["C#"],createdAt:"2019-09-22T14:00:00.000Z",updatedAt:"2020-08-16T05:23:42.307Z",enableComments:aq,enableTOC:aq,toc:[{id:ar,depth:F,text:as},{id:at,depth:F,text:ad},{id:au,depth:av,text:_},{id:aw,depth:F,text:L},{id:ax,depth:F,text:O},{id:ay,depth:F,text:az},{id:aA,depth:av,text:aB},{id:aC,depth:F,text:ae},{id:aD,depth:F,text:aE},{id:aF,depth:F,text:aG}],body:{type:"root",children:[{type:b,tag:G,props:{id:ar},children:[{type:b,tag:v,props:{ariaHidden:w,href:"#what-is-collection",tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:as}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:"A collection is a type whose purpose is to group data together and let you deal with lots of objects at the same time."}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:"Basic terminologies:"}]},{type:a,value:f},{type:b,tag:M,props:{},children:[{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"The object or struct in a collection is called an "},{type:b,tag:g,props:{},children:[{type:a,value:b}]},{type:a,value:af},{type:b,tag:g,props:{},children:[{type:a,value:"item"}]},{type:a,value:"."}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"Enumerate"}]},{type:a,value:af},{type:b,tag:g,props:{},children:[{type:a,value:"Iterate"}]},{type:a,value:" a collection is the process of going through each item in turn."}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"Look up an item"}]},{type:a,value:" means accessing an individual item in a collection."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:G,props:{id:at},children:[{type:b,tag:v,props:{ariaHidden:w,href:"#array",tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:ad}]},{type:a,value:f},{type:b,tag:aH,props:{id:au},children:[{type:b,tag:v,props:{ariaHidden:w,href:"#characteristics",tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:_}]},{type:a,value:f},{type:b,tag:M,props:{},children:[{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"fixed size"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"ordered"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:"Arrays are always reference types."}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:"Initialising an array"}]},{type:a,value:f},{type:b,tag:R,props:{className:[S]},children:[{type:b,tag:T,props:{className:[U,V]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\u002F\u002F using a collection initialiser if you already know the items in the array"}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,n]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:B}]},{type:a,value:"  "},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\u002F\u002F omitting the type on the right hand side only works with arrays. For all other collection types, the type definition is required, see below."}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aL}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aN}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,n]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]}]},{type:a,value:" daysOfWeek1 "},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:B}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,u,n]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aJ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aK}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aL}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aN}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\u002F\u002F instantiate array without knowing its elements"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\u002F\u002F A default value is set for each item. The default value is different depending on the type of that element e.g. `null` for reference type, `0` for int type etc."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aO},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:B}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,u,n]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:"10"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:"The "},{type:b,tag:g,props:{},children:[{type:a,value:aP}]},{type:a,value:" keyword instructs the C# compiler to generate code to construct an array. For example,"}]},{type:a,value:f},{type:b,tag:R,props:{className:[S]},children:[{type:b,tag:T,props:{className:[U,V]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"public"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,"return-type",n]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"void"}]}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,ak]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aP}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,n]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]}]},{type:a,value:" test "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\u002F\u002F The following two are the same"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ak]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,k,aa]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,k,aa]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ak]},children:[{type:a,value:al}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,u,n]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,k,aa]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,k,aa]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:G,props:{id:aw},children:[{type:b,tag:v,props:{ariaHidden:w,href:"#list",tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:L}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:_}]},{type:a,value:f},{type:b,tag:M,props:{},children:[{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"No fixed size"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:"Initialising a list"}]},{type:a,value:f},{type:b,tag:R,props:{className:[S]},children:[{type:b,tag:T,props:{className:[U,V]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:B}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,u,n]},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:B}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,u,n]},children:[{type:a,value:L},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:ai}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\u002F\u002F ..."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:G,props:{id:ax},children:[{type:b,tag:v,props:{ariaHidden:w,href:"#dictionary",tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:O}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:"A bag (no order) of key-value pairs. Type definition is "},{type:b,tag:g,props:{},children:[{type:a,value:am}]},{type:a,value:"\nInitialising a dictionary."}]},{type:a,value:f},{type:b,tag:R,props:{className:[S]},children:[{type:b,tag:T,props:{className:[U,V]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:B}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,u,n]},children:[{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:N}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:B}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,u,n]},children:[{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:G,props:{id:ay},children:[{type:b,tag:v,props:{ariaHidden:w,href:"#comparision",tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:az}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:"table",props:{},children:[{type:b,tag:"thead",props:{},children:[{type:b,tag:E,props:{},children:[{type:b,tag:ac,props:{align:h},children:[]},{type:b,tag:ac,props:{align:h},children:[{type:a,value:ad}]},{type:b,tag:ac,props:{align:h},children:[{type:a,value:L},{type:b,tag:"t",props:{},children:[]}]},{type:b,tag:ac,props:{align:h},children:[{type:a,value:"Dictionary\u003CTKey, Tvalue\u003E"}]}]}]},{type:b,tag:"tbody",props:{},children:[{type:b,tag:E,props:{},children:[{type:b,tag:j,props:{align:h},children:[{type:a,value:"Size"}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:"Fixed size"}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:"Not fixed size"}]},{type:b,tag:j,props:{align:h},children:[]}]},{type:b,tag:E,props:{},children:[{type:b,tag:j,props:{align:h},children:[{type:a,value:"Initialisation"}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:"Start with fixed size of default values"}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:"Start empty and add items dynamically. Even for "},{type:b,tag:g,props:{},children:[{type:a,value:"List\u003Cstring\u003E daysOfWeek = new List\u003Cstring\u003E { \"Monday\", \"Tuesday\" \u002F\u002F ... }"}]},{type:a,value:", the compiler still initialises an empty list and call "},{type:b,tag:g,props:{},children:[{type:a,value:aV}]},{type:a,value:" for each item. i.e. it's just a syntactic sugar."}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:"Start with empty dictionary then add items to it."}]}]},{type:b,tag:E,props:{},children:[{type:b,tag:j,props:{align:h},children:[{type:a,value:"Type syntax"}]},{type:b,tag:j,props:{align:h},children:[{type:b,tag:g,props:{},children:[{type:a,value:"string[]"}]},{type:a,value:" This is because array is part of the .NET runtime and therefore has its own syntax."}]},{type:b,tag:j,props:{align:h},children:[{type:b,tag:g,props:{},children:[{type:a,value:"List\u003Cstring\u003E"}]},{type:a,value:". It's just a normal type defined in the framework library and therefore follows the normal C# syntax."}]},{type:b,tag:j,props:{align:h},children:[{type:b,tag:g,props:{},children:[{type:a,value:am}]}]}]},{type:b,tag:E,props:{},children:[{type:b,tag:j,props:{align:h},children:[{type:a,value:_}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:"Simpler syntax"}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:"More flexible"}]},{type:b,tag:j,props:{align:h},children:[]}]},{type:b,tag:E,props:{},children:[{type:b,tag:j,props:{align:h},children:[{type:a,value:"Check the number of items"}]},{type:b,tag:j,props:{align:h},children:[{type:b,tag:g,props:{},children:[{type:a,value:"Length"}]},{type:a,value:an}]},{type:b,tag:j,props:{align:h},children:[{type:b,tag:g,props:{},children:[{type:a,value:aW}]},{type:a,value:an}]},{type:b,tag:j,props:{align:h},children:[{type:b,tag:g,props:{},children:[{type:a,value:aW}]},{type:a,value:an}]}]},{type:b,tag:E,props:{},children:[{type:b,tag:j,props:{align:h},children:[{type:a,value:"Efficiency"}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:"Occupies a continouse chunck of memory. Suuports random access of items"}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:"Also occupies a continous chunk of memory. "},{type:b,tag:g,props:{},children:[{type:a,value:aV}]},{type:a,value:af},{type:b,tag:g,props:{},children:[{type:a,value:"Remove()"}]},{type:a,value:" item near the front of the list can be expensive because it does copy and paste all following items. Also support random access of items."}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:"Fast read"}]}]},{type:b,tag:E,props:{},children:[{type:b,tag:j,props:{align:h},children:[{type:a,value:"Look up\u002Freplace an item"}]},{type:b,tag:j,props:{align:h},children:[{type:b,tag:g,props:{},children:[{type:a,value:aX}]}]},{type:b,tag:j,props:{align:h},children:[{type:b,tag:g,props:{},children:[{type:a,value:aX}]}]},{type:b,tag:j,props:{align:h},children:[{type:b,tag:g,props:{},children:[{type:a,value:"[key]"}]}]}]},{type:b,tag:E,props:{},children:[{type:b,tag:j,props:{align:h},children:[{type:a,value:"Multiple indices for an element"}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:"Yes, "},{type:b,tag:g,props:{},children:[{type:a,value:"[index1, index2]"}]},{type:a,value:" i.e. multidimensional array"}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:aY}]},{type:b,tag:j,props:{align:h},children:[{type:a,value:aY}]}]}]}]},{type:a,value:f},{type:b,tag:aH,props:{id:aA},children:[{type:b,tag:v,props:{ariaHidden:w,href:"#reflections",tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:aB}]},{type:a,value:f},{type:b,tag:M,props:{},children:[{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"Use array when the number of items is known."}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"Use list when the number of items is not known and there are not many insert\u002Fremove operations"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"Use dictionary if random access is important and order is not important"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:"Microsoft designed "},{type:b,tag:g,props:{},children:[{type:a,value:aZ}]},{type:a,value:" loop to be read only; use "},{type:b,tag:g,props:{},children:[{type:a,value:"for"}]},{type:a,value:" for updating a collection."}]},{type:a,value:f},{type:b,tag:G,props:{id:aC},children:[{type:b,tag:v,props:{ariaHidden:w,href:"#linq",tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:ae}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:"LINQ is for "},{type:b,tag:ao,props:{},children:[{type:a,value:"reading"}]},{type:a,value:" data only."}]},{type:a,value:f},{type:b,tag:G,props:{id:aD},children:[{type:b,tag:v,props:{ariaHidden:w,href:"#collection-of-collections",tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:aE}]},{type:a,value:f},{type:b,tag:M,props:{},children:[{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"jagged array"}]},{type:a,value:" is an array in which every element is an array, i.e. array of arrays "},{type:b,tag:g,props:{},children:[{type:a,value:a_}]}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"multidimensional array"}]},{type:a,value:" is just one simple plain array that require multiple indices to access an element "},{type:b,tag:g,props:{},children:[{type:a,value:"T[,]"}]}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:R,props:{className:[S]},children:[{type:b,tag:T,props:{className:[U,V]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\u002F\u002F Jagged array"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,n]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]}]},{type:a,value:" foo "},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:B}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:C}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,u,n]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Q}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,u,n]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Q}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,u,n]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Q}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\u002F\u002F multidimensional array"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Q}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,A]},children:[{type:a,value:B}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,u,n]},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Q}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,P]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:q}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:s,props:{},children:[{type:a,value:"Other collection types:"}]},{type:a,value:f},{type:b,tag:M,props:{},children:[{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"Array is "},{type:b,tag:ao,props:{},children:[{type:b,tag:ao,props:{},children:[{type:a,value:"not"}]}]},{type:a,value:" a standard generic collection. It's uniquely baked into the .NET runtime. This gives them special syntax etc."}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"Standard generic collections"}]},{type:a,value:" are usually found in "},{type:b,tag:g,props:{},children:[{type:a,value:"System.Collections.Generic"}]},{type:a,value:" such as "},{type:b,tag:g,props:{},children:[{type:a,value:a$}]},{type:a,value:ap},{type:b,tag:g,props:{},children:[{type:a,value:am}]},{type:a,value:", SortedDictionary, SortedList, LinkedList"}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"System.Collections.ObjectModel"}]},{type:a,value:" usually contains collections for building custom collections. For example, the ObservableCollection is built on top of ObjectModel types."}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"Immutable collections i.e. collections that can't be modified once instantiated. Most collections have their immutable counter parts e.g. "},{type:b,tag:g,props:{},children:[{type:a,value:"ImmutableArray"}]},{type:a,value:ap},{type:b,tag:g,props:{},children:[{type:a,value:"ImmutableList"}]},{type:a,value:ap},{type:b,tag:g,props:{},children:[{type:a,value:"ImmutableDictionary"}]},{type:a,value:" etc. These are natually thread safe because they can never be modifed once they are created."}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:a,value:"Concurrent collections are similar to standard collections but are thread-safe. Arrays and all other collections are designed to be used by one thread at a time."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:G,props:{id:aF},children:[{type:b,tag:v,props:{ariaHidden:w,href:"#collection-interfaces",tabIndex:x},children:[{type:b,tag:c,props:{className:[y,z]},children:[]}]},{type:a,value:aG}]},{type:a,value:f},{type:b,tag:M,props:{},children:[{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:ba}]},{type:a,value:" - All collections implement "},{type:b,tag:g,props:{},children:[{type:a,value:ba}]},{type:a,value:" that allows a collection to act as a data source. "},{type:b,tag:g,props:{},children:[{type:a,value:ae}]},{type:a,value:" and "},{type:b,tag:g,props:{},children:[{type:a,value:aZ}]},{type:a,value:" rely heavily on the interface."}]},{type:a,value:f},{type:b,tag:o,props:{},children:[{type:b,tag:g,props:{},children:[{type:a,value:"IList\u003CT\u003E"}]},{type:a,value:" - Implemented by types such as "},{type:b,tag:g,props:{},children:[{type:a,value:a_}]},{type:a,value:l},{type:b,tag:g,props:{},children:[{type:a,value:a$}]},{type:a,value:" etc, this interface provides functions such as enumerate, look up by index, modify by index etc."}]},{type:a,value:f}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fc-sharp-collections",extension:".md",slug:"c-sharp-collections"}}],fetch:[],mutations:void 0}}("text","element","span","token","punctuation","\n","code","left","keyword","td","string"," ",",","class-name","li","[","]","\n                ","p","new","constructor-invocation","a","true",-1,"icon","icon-link","operator","=","{","}","tr",2,"h2","comment","\u003C","\u003E","\n    ","List","ul",";","Dictionary","number","int","div","nuxt-content-highlight","pre","language-csharp","line-numbers","\n\n","(",")","3","Characteristics","\n            ","character"," Country","th","Array","LINQ"," or "," daysOfWeek ","\"Monday\"","\"Tuesday\""," countries ","function","Foo","Dictionary\u003CTKey, TValue\u003E"," property","em",", ",true,"what-is-collection","What is Collection","array","characteristics",3,"list","dictionary","comparision","Comparision","reflections","Reflections","linq","collection-of-collections","Collection of collections","collection-interfaces","Collection Interfaces","h3","\n ","\"Wednesday\"","\"Thursday\"","\"Friday\"","\"Saturday\"","\"Sunday\"","Country","params","char","'a'","'b'","key","value","Add()","Count","[index]","No","foreach","T[][]","List\u003CT\u003E","IEnumerable\u003CT\u003E")));