__NUXT_JSONP__("/articles/git-commands", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg){return {data:[{article:{title:"Common Git commands and configurations used in a day-to-day workflow",excerpt:"When using Git via the command line, I find myself repeating similar tasks everyday. Over time, I've built up a curated list of Git commands, aliases and configrations that I use on a daily basis.",category:"Git",tags:["Git Commands"],createdAt:"2019-11-14T13:00:00.000Z",updatedAt:"2020-09-07T13:15:30.403Z",enableComments:ac,enableTOC:ac,toc:[{id:ad,depth:D,text:ae},{id:af,depth:D,text:ag},{id:ah,depth:D,text:ai},{id:aj,depth:D,text:ak},{id:al,depth:D,text:am},{id:an,depth:D,text:ao},{id:ap,depth:D,text:aq},{id:ar,depth:D,text:as},{id:at,depth:D,text:au},{id:av,depth:D,text:aw},{id:ax,depth:D,text:ay},{id:az,depth:D,text:aA},{id:aB,depth:D,text:aC},{id:aD,depth:2,text:aE}],body:{type:"root",children:[{type:b,tag:h,props:{},children:[{type:a,value:"I'm a command line lover and use Git from the terminal all the time."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"If you're like me, you might start getting annoyed by some little things at a certain point. For example, it starts to get a bit annoying to always type two separate commands - "},{type:b,tag:f,props:{},children:[{type:a,value:"git add \u003Cfile\u003E"}]},{type:a,value:" then "},{type:b,tag:f,props:{},children:[{type:a,value:"git commit -m 'Your commit message'"}]},{type:a,value:" - to commit your changes. Or maybe you want to have a better looking git history when you type "},{type:b,tag:f,props:{},children:[{type:a,value:aF}]},{type:a,value:". Or you want your local branch to be automatically pruned when the remote branch has been deleted. Little things like these - you get the idea."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Over time, I have built up a curated list of commands, aliases and configrations that I use on a daily basis that makes my workflow more efficient and pleasant. And I'd like to share them with you below."}]},{type:a,value:e},{type:b,tag:E,props:{id:ad},children:[{type:b,tag:k,props:{href:"#list-your-local-branches-and-their-remote-tracking-branches",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:ae}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"In addition, this command also shows the hash code and the commit message of the latest commit. It also tells you if the remote branch has been deleted."}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" branch -vv\n"}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"For example, running the command produces the following output on my machine,"}]},{type:a,value:e},{type:b,tag:aG,props:{src:"articles\u002Fgit-commands\u002Fcommand-git-branch-vv.png",name:aH,newline:J},children:[{type:a,value:e}]},{type:a,value:e},{type:b,tag:E,props:{id:af},children:[{type:b,tag:k,props:{href:"#checkout-a-remote-branch",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:ag}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"With Git versions â‰¥ 1.6.6 and with only one remote, you can just do:"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" fetch\n"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" checkout "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"git checkout \u003Cbranch_name\u003E"}]},{type:a,value:aI},{type:b,tag:G,props:{},children:[{type:a,value:"NOT"}]},{type:a,value:" work in modern Git if you have multiple remotes. In this case use"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" checkout -b "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"or the shorthand"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" checkout -t "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:aJ},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:E,props:{id:ah},children:[{type:b,tag:k,props:{href:"#add-and-commit-in-one-command",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:ai}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Add either one of the following aliases to your global Git config file (usually at "},{type:b,tag:f,props:{},children:[{type:a,value:"~\u002F.gitconfig"}]},{type:a,value:" on a Linux\u002FMac OS system). I prefer the second one because it saves a few more keystrokes."}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# add a `add-commit` alias, or"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" config --global alias.add-commit "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aK}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# add a `ac` alias to save a few more keystrokes"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" config --global alias.ac "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aK}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"And use it with"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" add-commit -m "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aL}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:P}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" ac -m "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aL}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:E,props:{id:aj},children:[{type:b,tag:k,props:{href:"#delete-a-branch-both-locally-and-remotely",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:ak}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"When you're done with a branch, you can delete it from both the remote and your local machine using the commands below."}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# delete a remote branch"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" push -d "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:P}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" push -D "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# delete a local branch"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" branch -d "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:P}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" branch -D "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:Q,props:{variant:R,show:J},children:[{type:a,value:"\nNote that in most cases the \n"},{type:b,tag:S,props:{},children:[{type:a,value:"\u003Cremote_name\u003E"}]},{type:a,value:"\n name is origin.\n"}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Note"}]},{type:a,value:": The "},{type:b,tag:f,props:{},children:[{type:a,value:"-d"}]},{type:a,value:" option is an alias for "},{type:b,tag:f,props:{},children:[{type:a,value:"--delete"}]},{type:a,value:", which only deletes the branch if it has already been fully merged in its upstream branch. You could also use "},{type:b,tag:f,props:{},children:[{type:a,value:"-D"}]},{type:a,value:", which is an alias for "},{type:b,tag:f,props:{},children:[{type:a,value:"--delete --force"}]},{type:a,value:", which deletes the branch \""},{type:b,tag:k,props:{href:"https:\u002F\u002Fgit-scm.com\u002Fdocs\u002Fgit-branch#Documentation\u002Fgit-branch.txt--D",rel:[w,x,y],target:z},children:[{type:a,value:"irrespective of its merged status"}]},{type:a,value:"\"."}]},{type:a,value:e},{type:b,tag:E,props:{id:al},children:[{type:b,tag:k,props:{href:"#delete-all-branches-that-have-been-merged-in-remote",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:am}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Assume you have a long running "},{type:b,tag:f,props:{},children:[{type:a,value:M}]},{type:a,value:" branch, and you branch off it to create different feature branches e.g. "},{type:b,tag:f,props:{},children:[{type:a,value:aM}]},{type:a,value:T},{type:b,tag:f,props:{},children:[{type:a,value:aN}]},{type:a,value:N}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"After your peers have reviewed your pull requests for both features, merged them back to "},{type:b,tag:f,props:{},children:[{type:a,value:M}]},{type:a,value:" and deleted them from remote. You can delete "},{type:b,tag:f,props:{},children:[{type:a,value:aM}]},{type:a,value:U},{type:b,tag:f,props:{},children:[{type:a,value:aN}]},{type:a,value:" from your local by running,"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# switch to the development branch first"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" checkout development\n\n"},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# delete local branches whose remote tracking branches have been merged back to development"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" delete-merged\n"}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"You probably have noticed that "},{type:b,tag:f,props:{},children:[{type:a,value:"delete-merged"}]},{type:a,value:" is not a Git command - it's actually an alias we set up. The parameters used in the actual command is different depending on your setup. But you can follow the following steps to construct a command that suits your needs."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:V}]},{type:a,value:": Check out the "},{type:b,tag:f,props:{},children:[{type:a,value:M}]},{type:a,value:" branch."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:W}]},{type:a,value:": List all branches that have been merged into it in remote."}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" branch --merged\n"}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:aO}]},{type:a,value:": You might see a few branches that you don't want to remove e.g. "},{type:b,tag:f,props:{},children:[{type:a,value:aP}]},{type:a,value:T},{type:b,tag:f,props:{},children:[{type:a,value:"release"}]},{type:a,value:" etc. And you can filter down the list by excluding those branches by"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:X}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Y}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aS}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:Q,props:{variant:R,show:J},children:[{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"The regular expression used by the "},{type:b,tag:f,props:{},children:[{type:a,value:Y}]},{type:a,value:" command basically means \"all branches whose name starts with "},{type:b,tag:f,props:{},children:[{type:a,value:aP}]},{type:a,value:T},{type:b,tag:f,props:{},children:[{type:a,value:M}]},{type:a,value:" or "},{type:b,tag:f,props:{},children:[{type:a,value:"skip_branch_name"}]},{type:a,value:aI},{type:b,tag:S,props:{},children:[{type:a,value:"not"}]},{type:a,value:" be deleted\"."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"You can modify the branches above or add your own branches that you don't want to delete."}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Step 4"}]},{type:a,value:": Delete all local branches that are already merged into the currently checked out branch"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:X}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:Y}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aS}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:X}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"xargs"}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" branch -d\n"}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Step 5"}]},{type:a,value:": Set a global alias "},{type:b,tag:f,props:{},children:[{type:a,value:"deleted-merged"}]},{type:a,value:" for the command"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" config --global alias.delete-merged "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"'git branch --merged | egrep -v \"(^\\*|master|development|skip_branch_name)\" | xargs git branch -d'"}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:E,props:{id:an},children:[{type:b,tag:k,props:{href:"#discard-unstaged-files-in-current-working-directory",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:ao}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"To discard all unstaged files in current working directory,"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" checkout -- "},{type:b,tag:c,props:{className:[d,Z,_]},children:[{type:a,value:N}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"For a specific file, use"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" checkout -- path\u002Fto\u002Ffile\u002Fto\u002Frevert\n"}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:aT},{type:b,tag:f,props:{},children:[{type:a,value:"--"}]},{type:a,value:" is to remove "},{type:b,tag:k,props:{href:"https:\u002F\u002Fgit-scm.com\u002Fdocs\u002Fgit-checkout#_argument_disambiguation",rel:[w,x,y],target:z},children:[{type:a,value:"argument ambiguation"}]},{type:a,value:N}]},{type:a,value:e},{type:b,tag:E,props:{id:ap},children:[{type:b,tag:k,props:{href:"#rename-a-local-and-remote-branch",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:aq}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:V}]},{type:a,value:": Rename your local branch"}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"If you are on the branch you want to rename:"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"If you are on a different branch:"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:W}]},{type:a,value:": Delete the "},{type:b,tag:f,props:{},children:[{type:a,value:"\u003Cold-name\u003E"}]},{type:a,value:" remote branch and push the "},{type:b,tag:f,props:{},children:[{type:a,value:aW}]},{type:a,value:aX}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" push origin :"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:aO}]},{type:a,value:": Reset the upstream branch for the "},{type:b,tag:f,props:{},children:[{type:a,value:aW}]},{type:a,value:aX}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Switch to the branch and then:"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" push origin -u "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:E,props:{id:ar},children:[{type:b,tag:k,props:{href:"#prettify-the-git-log",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:as}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"You can format your Git log to look like below and set an alias for it."}]},{type:a,value:e},{type:b,tag:aG,props:{src:"articles\u002Fgit-commands\u002Fcommand-git-lg.png",name:aH,newline:J},children:[{type:a,value:e}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:V}]},{type:a,value:": Set up the following alias in your global Git config file"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" config --global alias.lg "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"\"log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)\u003C%an\u003E%Creset' --abbrev-commit --date=relative\""}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:W}]},{type:a,value:": Append additional flags if needed"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# filter by start date"}]},{type:a,value:"\n--after"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aY}]},{type:a,value:"\n--since"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aY}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# filter by end date"}]},{type:a,value:"\n--before"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aZ}]},{type:a,value:"\n--until"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:aZ}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# filter by author"}]},{type:a,value:"\n--author"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"\"Zean Qin\""}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"My most commonly used command is"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" lg --after"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"\"yesterday\""}]},{type:a,value:" --author"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"\"Zean\""}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:E,props:{id:at},children:[{type:b,tag:k,props:{href:"#compare-commits-between-two-branches",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:au}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Before merging one branch into another, you might want to get an overview of the commits to be merged."}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" log --oneline --graph --pretty"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:H}]},{type:a,value:"format:"},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)\u003C%an\u003E%Creset'"}]},{type:a,value:" --decorate --abbrev-commit "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:"destination_branch"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:b,tag:c,props:{className:[d,"punctuation"]},children:[{type:a,value:".."}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:"source_branch"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:E,props:{id:av},children:[{type:b,tag:k,props:{href:"#prettify-git-diff",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:aw}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"I use "},{type:b,tag:k,props:{href:a_,rel:[w,x,y],target:z},children:[{type:a,value:"diff-so-fancy"}]},{type:a,value:" to make the diffs more readable. Follow "},{type:b,tag:k,props:{href:"https:\u002F\u002Fgithub.com\u002Fso-fancy\u002Fdiff-so-fancy#install",rel:[w,x,y],target:z},children:[{type:a,value:"the official setup steps"}]},{type:a,value:" and then just run"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"diff"}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:E,props:{id:ax},children:[{type:b,tag:k,props:{href:"#prune-remote-tracking-branches-automatically-for-a-branch-on-the-other-side-that-has-already-been-deleted",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:ay}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"Without "},{type:b,tag:f,props:{},children:[{type:a,value:"git fetch --prune"}]},{type:a,value:", remote-tracking branches for a branch\nthe other side already has removed will stay forever."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:a$},{type:b,tag:f,props:{},children:[{type:a,value:ba}]},{type:a,value:" for "},{type:b,tag:f,props:{},children:[{type:a,value:"git fetch"}]},{type:a,value:U},{type:b,tag:f,props:{},children:[{type:a,value:"git pull"}]},{type:a,value:" in all your Git repositories:"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" config --global fetch.prune "},{type:b,tag:c,props:{className:[d,bb]},children:[{type:a,value:v}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:a$},{type:b,tag:f,props:{},children:[{type:a,value:ba}]},{type:a,value:" but from one single repository,"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" config remote.origin.prune "},{type:b,tag:c,props:{className:[d,bb]},children:[{type:a,value:v}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"#^^^^^^"}]},{type:a,value:bc},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"#replace with your repo name"}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:E,props:{id:az},children:[{type:b,tag:k,props:{href:"#make-git-to-use-vim-as-editor-for-writing-commit-messages",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:aA}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"If you want to set the editor only for Git, do either (you donâ€™t need both):"}]},{type:a,value:e},{type:b,tag:"ul",props:{},children:[{type:a,value:e},{type:b,tag:F,props:{},children:[{type:a,value:"Set "},{type:b,tag:f,props:{},children:[{type:a,value:"core.editor"}]},{type:a,value:" in your Git config: "},{type:b,tag:f,props:{},children:[{type:a,value:"git config --global core.editor \"vim\""}]}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:a,value:"Set the "},{type:b,tag:f,props:{},children:[{type:a,value:"GIT_EDITOR"}]},{type:a,value:" environment variable: "},{type:b,tag:f,props:{},children:[{type:a,value:"export GIT_EDITOR=vim"}]}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"If you want to set the editor for Git and also other programs, set the standardized "},{type:b,tag:f,props:{},children:[{type:a,value:$}]},{type:a,value:U},{type:b,tag:f,props:{},children:[{type:a,value:bd}]},{type:a,value:" environment variables:"}]},{type:a,value:e},{type:b,tag:Q,props:{variant:R,show:J},children:[{type:a,value:"\nSetting both is not necessarily needed, but some programs may not use the more-correct "},{type:b,tag:f,props:{},children:[{type:a,value:$}]},{type:a,value:".\n"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,Z,_]},children:[{type:a,value:be}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,bf,aa]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:H}]},{type:a,value:"vim\n"},{type:b,tag:c,props:{className:[d,Z,_]},children:[{type:a,value:be}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,bf,aa]},children:[{type:a,value:bd}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:bg},{type:b,tag:c,props:{className:[d,aa]},children:[{type:a,value:"$VISUAL"}]},{type:a,value:bg}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:E,props:{id:aB},children:[{type:b,tag:k,props:{href:"#revert-a-merge-commit-thats-already-pushed-to-remote-branch",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:aC}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# revert the commit and create a new commit"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" revert "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:"commit-id"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:" -m "},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:"parent-number"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# push the new, revert commit to remote"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" push\n\n"},{type:b,tag:c,props:{className:[d,u]},children:[{type:a,value:"# other people can then pull the new commit"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:" pull\n"}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:aT},{type:b,tag:f,props:{},children:[{type:a,value:"-m"}]},{type:a,value:" option specifies the "},{type:b,tag:S,props:{},children:[{type:a,value:"parent number"}]},{type:a,value:". This is because a merge commit has more than one parent, and Git does not know automatically which parent was the mainline, and which parent was the branch you want to un-merge."}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"When you view a merge commit in the output of "},{type:b,tag:f,props:{},children:[{type:a,value:aF}]},{type:a,value:", you will see its parents listed on the line that begins with "},{type:b,tag:f,props:{},children:[{type:a,value:"Merge"}]},{type:a,value:":"}]},{type:a,value:e},{type:b,tag:l,props:{className:[m]},children:[{type:b,tag:n,props:{className:[o,p]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"commit 35b4b1355e5dbfeece0121cff2c89ec574da2a29\nMerge: 420dacb2 beca933d\nAuthor: Alexander"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:q}]},{type:a,value:"alex@gmail.com"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:r}]},{type:a,value:"\nDate:   Fri Jan "},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"22"}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"16"}]},{type:a,value:":42:36 "},{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:"2021"}]},{type:a,value:" +1100\n\n    Merge branch "},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"'feature\u002FRUM-649-redux'"}]},{type:a,value:" into development\n"}]}]}]},{type:a,value:e},{type:b,tag:h,props:{},children:[{type:a,value:"In this situation, "},{type:b,tag:f,props:{},children:[{type:a,value:"git revert 35b4b13 -m 1"}]},{type:a,value:" will get you the tree as it was in "},{type:b,tag:f,props:{},children:[{type:a,value:"420dacb2"}]},{type:a,value:", and "},{type:b,tag:f,props:{},children:[{type:a,value:"git revert -m 2"}]},{type:a,value:" will reinstate the tree as it was in "},{type:b,tag:f,props:{},children:[{type:a,value:"beca933d"}]},{type:a,value:N}]},{type:a,value:e},{type:b,tag:"h2",props:{id:aD},children:[{type:b,tag:k,props:{href:"#references",ariaHidden:v,tabIndex:A},children:[{type:b,tag:c,props:{className:[B,C]},children:[]}]},{type:a,value:aE}]},{type:a,value:e},{type:b,tag:"ol",props:{},children:[{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:k,props:{href:"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F2003505\u002Fhow-do-i-delete-a-git-branch-locally-and-remotely",rel:[w,x,y],target:z},children:[{type:a,value:"How do I delete a Git branch locally and remotely?"}]}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:k,props:{href:"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F1783405\u002Fhow-do-i-check-out-a-remote-git-branch",rel:[w,x,y],target:z},children:[{type:a,value:"How do I check out a remote Git branch?"}]}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:k,props:{href:"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F4298960\u002Fgit-add-and-commit-in-one-command",rel:[w,x,y],target:z},children:[{type:a,value:"Git add and commit in one command"}]}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:k,props:{href:"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F2596805\u002Fhow-do-i-make-git-use-the-editor-of-my-choice-for-commits",rel:[w,x,y],target:z},children:[{type:a,value:"How do I make Git use the editor of my choice for commits?"}]}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:k,props:{href:"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F52704\u002Fhow-do-i-discard-unstaged-changes-in-git",rel:[w,x,y],target:z},children:[{type:a,value:"How do I discard unstaged changes in Git?"}]}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:k,props:{href:"https:\u002F\u002Fmultiplestates.wordpress.com\u002F2015\u002F02\u002F05\u002Frename-a-local-and-remote-branch-in-git\u002F",rel:[w,x,y],target:z},children:[{type:a,value:"Rename a local and remote branch in git"}]}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:k,props:{href:a_,rel:[w,x,y],target:z},children:[{type:a,value:"Good-lookin' diffs. Actuallyâ€¦ nahâ€¦ The best-lookin' diffs."}]}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:k,props:{href:"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F18308535\u002Fautomatic-prune-with-git-fetch-or-pull",rel:[w,x,y],target:z},children:[{type:a,value:"Automatic prune with Git fetch or pull"}]}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:k,props:{href:"https:\u002F\u002Fgithub.com\u002Fgit\u002Fgit\u002Fcommit\u002F737c5a9cde708d6995c765b7c2e95033edd0a896#diff-07f3b3cf16a56e95990c64bdef634199R940",rel:[w,x,y],target:z},children:[{type:a,value:"fetch: make --prune configurable"}]}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:k,props:{href:"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F6127328\u002Fhow-can-i-delete-all-git-branches-which-have-been-merged",rel:[w,x,y],target:z},children:[{type:a,value:"How can I delete all Git branches which have been merged?"}]}]},{type:a,value:e},{type:b,tag:F,props:{},children:[{type:b,tag:k,props:{href:"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F7099833\u002Fhow-to-revert-a-merge-commit-thats-already-pushed-to-remote-branch",rel:[w,x,y],target:z},children:[{type:a,value:"How to revert a merge commit that's already pushed to remote branch?"}]}]},{type:a,value:e}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fgit-commands",extension:".md",slug:"git-commands"}}],fetch:[],mutations:void 0}}("text","element","span","token","\n","code","operator","p","function","git","a","div","nuxt-content-highlight","pre","language-bash","line-numbers","\u003C","\u003E","string"," ","comment","true","nofollow","noopener","noreferrer","_blank",-1,"icon","icon-link",3,"h3","li","strong","=","branch_name","","\n\n","remote_name","development",".","new-name","# or","b-alert","info","em",", "," and ","Step 1","Step 2","|","egrep","builtin","class-name","VISUAL","variable","number",true,"list-your-local-branches-and-their-remote-tracking-branches","List your local branches and their remote tracking branches","checkout-a-remote-branch","Checkout a remote branch","add-and-commit-in-one-command","Add and commit in one command","delete-a-branch-both-locally-and-remotely","Delete a branch both locally and remotely","delete-all-branches-that-have-been-merged-in-remote","Delete all branches that have been merged in remote","discard-unstaged-files-in-current-working-directory","Discard unstaged files in current working directory","rename-a-local-and-remote-branch","Rename a local and remote branch","prettify-the-git-log","Prettify the Git log","compare-commits-between-two-branches","Compare commits between two branches","prettify-git-diff","Prettify Git diff","prune-remote-tracking-branches-automatically-for-a-branch-on-the-other-side-that-has-already-been-deleted","Prune remote-tracking branches automatically for a branch on the other side that has already been deleted","make-git-to-use-vim-as-editor-for-writing-commit-messages","Make Git to use Vim as editor for writing commit messages","revert-a-merge-commit-thats-already-pushed-to-remote-branch","Revert a merge commit that's already pushed to remote branch","references","References","git log","asset","List local and remote tracking branches"," will ","\u002F","'!git add -A && git commit'","'My commit message'","feature\u002FA","feature\u002FB","Step 3","master"," branch --merged "," -v ","\"(^\\*|master|development|skip_branch_name)\"","The "," branch -m ","old-name","\u003Cnew-name\u003E"," local branch","\"2016-01-31\"","\"2017-03-10\"","https:\u002F\u002Fgithub.com\u002Fso-fancy\u002Fdiff-so-fancy","To always ","--prune","boolean","\n                 ","EDITOR","export","assign-left","\"")));